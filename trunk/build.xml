<?xml version="1.0"?>
<project name="fictionbook" basedir="." default="build">

    <import file="tools/targets/swing.xml"/>
    <import file="tools/targets/common.xml"/>
    <import file="tools/targets/reader.xml"/>

    <!-- version definition -->
    <property file="src/ru/gelin/fictionbook/resources/version.properties"/>

    <!-- directories definitions -->
    <property name="src"      value="src"/>
    <property name="build"    value="build"/>
    <property name="classes"  value="${build}/classes"/>
    <property name="lib"      value="lib"/>
    <property name="contrib"  value="${lib}/thirdparty"/>
    <property name="dist"     value="dist"/>

    <property name="test.src"       value="test"/>
    <property name="test.classes"   value="${build}/test"/>
    <property name="test.contrib"   value="${lib}/test"/>
    <property name="test.doc"       value="docs/test"/>
    <property name="java.util.logging.config.file"
              location="${test.src}/logging.properties"/>

    <property name="javadoc"  value="docs/api"/>

    <path id="compile.path">
        <pathelement path="${classes}"/>
        <fileset dir="${lib}" includes="*.jar"/>
        <fileset dir="${contrib}" includes="*.jar"/>
    </path>

    <path id="test.path">
        <pathelement path="${test.classes}"/>
        <path refid="compile.path"/>
        <fileset dir="${test.contrib}" includes="*.jar"/>
    </path>

    <fileset id="licenses" dir=".">
        <include name="LICENSE.txt"/>
        <!--include name="THIRDPARTYLICENSE.txt"/-->
        <!--include name="NOTICE.txt"/-->
    </fileset>

    <propertyset id="test.properties">
        <propertyref name="java.util.logging.config.file"/>
    </propertyset>

    <tstamp>
        <format property="TSTAMP" pattern="yyyy-MM-dd'T'HH"/>
    </tstamp>


    <target name="clean" description="delete compiled files">
        <delete dir="${build}"/>
        <delete dir="${test.doc}"/>
    </target>

    <target name="resources" description="copy resources">
        <native2ascii encoding="UTF-8"
                      src="${src}"
                      dest="${classes}"
                      includes="**/*.properties"/>
    </target>

    <target name="compile"
            depends="swing.compile,
                     common.compile,
                     reader.compile"
            description="compile projects"/>

    <target name="test.resources">
        <native2ascii encoding="UTF-8"
                      src="${test.src}"
                      dest="${test.classes}"
                      includes="**/*.properties"/>
    </target>

    <target name="test"
            depends="test.resources,
                     swing.test,
                     common.test,
                     reader.test"
            description="run projects' tests">
        <mkdir dir="${test.doc}/report"/>
        <mkdir dir="${test.doc}/report/html"/>
        <junitreport todir="${test.doc}/report">
            <fileset dir="${test.doc}">
                <include name="TEST-*.xml"/>
            </fileset>
            <report todir="${test.doc}/report/html"/>
        </junitreport>
    </target>

    <target name="jar"
            depends="compile, resources,
                     swing.jar,
                     common.jar,
                     reader.jar"
            description="make projects' jar archives"/>

    <target name="build" depends="compile, test, jar"
            description="makes full build of projects"/>

    <target name="dist" depends="clean, compile, jar"
            description="makes project distribution">
        <mkdir dir="${dist}"/>
        <zip destfile="${dist}/${ant.project.name}.zip">
            <fileset dir=".">
                <include name="**"/>
                <exclude name="build/**"/>
                <exclude name="dist/**"/>
            </fileset>
        </zip>
    </target>

    <target name="javadoc" description="creates projects' API documentation">
        <delete dir="${javadoc}"/>
        <mkdir dir="${javadoc}"/>
        <javadoc destdir="${javadoc}"
                 windowtitle="${ant.project.name} API"
                 use="true"
                 nodeprecatedlist="true">
            <packageset dir="${src}">
                <include name="ru/gelin/fictionbook/**"/>
            </packageset>
            <bottom><![CDATA[<i>Copyright &#169; 2007  Denis Nelubin aka Gelin</i>]]></bottom>
            <!--link offline="true" href="http://java.sun.com/j2se/1.4.2/docs/api/" packagelistLoc="${templates.srcdir}"/-->
        </javadoc>
    </target>

</project>
